import discord
from discord.ext import commands
from discord import app_commands, Interaction, ui
import os

TOKEN = os.getenv("TOKEN")
GUILD_ID = int(os.getenv("GUILD_ID"))
MOD_CHANNEL_ID = int(os.getenv("MOD_CHANNEL_ID"))
ROLE_ID = int(os.getenv("ROLE_ID"))

intents = discord.Intents.default()
intents.members = True
bot = commands.Bot(command_prefix="!", intents=intents)

class VerifyForm(ui.Modal, title="Void-Verify | –§–æ—Ä–º–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏"):

    age = ui.TextInput(label="–°–∫–æ–ª—å–∫–æ –≤–∞–º –ª–µ—Ç?", placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: 18", required=True)
    nickname = ui.TextInput(label="–í–∞—à –Ω–∏–∫", placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: DarkWolf", required=True)
    realname = ui.TextInput(label="–í–∞—à–µ –∏–º—è", placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –ò–≤–∞–Ω", required=True)
    rules = ui.TextInput(label="–í—ã –∑–Ω–∞–µ—Ç–µ –ø—Ä–∞–≤–∏–ª–∞? (–¥–∞/–Ω–µ—Ç)", placeholder="–¥–∞ –∏–ª–∏ –Ω–µ—Ç", required=True)

    async def on_submit(self, interaction: Interaction):
        embed = discord.Embed(
            title="üì© Void-Verify | –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é",
            color=discord.Color.purple()
        )
        embed.add_field(name="–í–æ–∑—Ä–∞—Å—Ç", value=self.age.value, inline=False)
        embed.add_field(name="–ù–∏–∫", value=self.nickname.value, inline=False)
        embed.add_field(name="–ò–º—è", value=self.realname.value, inline=False)
        embed.add_field(name="–ó–Ω–∞–µ—Ç –ø—Ä–∞–≤–∏–ª–∞", value=self.rules.value, inline=False)
        embed.set_footer(text=f"–ó–∞—è–≤–∫–∞ –æ—Ç {interaction.user} ‚Ä¢ Void-Verify")

        view = ModerationButtons(interaction.user)

        mod_channel = bot.get_channel(MOD_CHANNEL_ID)
        if mod_channel:
            await mod_channel.send(embed=embed, view=view)
            await interaction.response.send_message("‚úÖ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞–º.", ephemeral=True)
        else:
            await interaction.response.send_message("‚ùå –û—à–∏–±–∫–∞: –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—Å–∫–∏–π –∫–∞–Ω–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω.", ephemeral=True)

class ModerationButtons(ui.View):
    def __init__(self, user):
        super().__init__(timeout=None)
        self.user = user

    @ui.button(label="‚úÖ –ü—Ä–∏–Ω—è—Ç—å", style=discord.ButtonStyle.success)
    async def accept(self, interaction: Interaction, button: ui.Button):
        guild = interaction.guild
        role = guild.get_role(ROLE_ID)
        member = guild.get_member(self.user.id)

        if not role:
            await interaction.response.send_message("‚ùå –†–æ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.", ephemeral=True)
            return

        if not member:
            await interaction.response.send_message("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.", ephemeral=True)
            return

        try:
            await member.add_roles(role)
            await interaction.response.send_message(
                f"‚úÖ {self.user.mention} –±—ã–ª –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω –∏ –ø–æ–ª—É—á–∏–ª —Ä–æ–ª—å **{role.name}**.",
                ephemeral=False
            )
        except discord.Forbidden:
            await interaction.response.send_message("‚ùå –£ –±–æ—Ç–∞ –Ω–µ—Ç –ø—Ä–∞–≤ –≤—ã–¥–∞—Ç—å —ç—Ç—É —Ä–æ–ª—å.", ephemeral=True)

    @ui.button(label="‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", style=discord.ButtonStyle.danger)
    async def decline(self, interaction: Interaction, button: ui.Button):
        await interaction.response.send_message(
            f"‚ùå {self.user.mention}, –≤–∞—à–∞ –∑–∞—è–≤–∫–∞ –±—ã–ª–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º {interaction.user.mention}.",
            ephemeral=False
        )

@bot.event
async def on_ready():
    await bot.tree.sync(guild=discord.Object(id=GUILD_ID))
    await bot.change_presence(
        activity=discord.Game(name="–æ–∂–∏–¥–∞–µ—Ç –∑–∞—è–≤–∫–∏... | /verify"),
        status=discord.Status.online
    )
    print(f"Void-Verify –∑–∞–ø—É—â–µ–Ω –∫–∞–∫ {bot.user}!")

@bot.tree.command(name="verify", description="–ü—Ä–æ–π—Ç–∏ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é", guild=discord.Object(id=GUILD_ID))
async def verify_command(interaction: Interaction):
    await interaction.response.send_modal(VerifyForm())

bot.run(TOKEN)
